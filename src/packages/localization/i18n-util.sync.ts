// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */

import { initFormatters } from './formatters'
import type { Locales, Translations } from './i18n-types'
import { loadedFormatters, loadedLocales, locales } from './i18n-util'

import de from './de'
import en from './en'
import ru from './ru'

import de_namespace from './de/namespace'
import en_namespace from './en/namespace'
import ru_namespace from './ru/namespace'

const localeTranslations = {
	de: {
		...de,
		namespace: de_namespace
	},
	en: {
		...en,
		namespace: en_namespace
	},
	ru: {
		...ru,
		namespace: ru_namespace
	},
}

export const loadLocale = (locale: Locales): void => {
	if (loadedLocales[locale]) return

	loadedLocales[locale] = localeTranslations[locale] as unknown as Translations
	loadFormatters(locale)
}

export const loadAllLocales = (): void => locales.forEach(loadLocale)

export const loadFormatters = (locale: Locales): void => {
	loadedFormatters[locale] = initFormatters(locale)
}
